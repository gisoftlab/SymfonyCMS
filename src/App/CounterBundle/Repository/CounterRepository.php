<?php
/*
 * This file is part of the Gisoft package.
 *
 * (c) Damian Ostraszewski
 *
 */
namespace App\CounterBundle\Repository;

use Doctrine\ORM\EntityRepository;
use App\CounterBundle\Entity\Country as Country;
use App\CoreBundle\Libraries\gsEntityRepository;
use App\CoreBundle\Libraries\gsArrayPager;

/**
 * CounterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CounterRepository extends gsEntityRepository {
    
     private static $aliases = array(
         "id" => "gc.id",
        "category" => "gca.name",
        "starttime" => "gc.StartTime",
        "subject" => "gc.Subject",
        "showname" => "sgu.showname",
    );
     
     private function fatchAllBySQL($sql){
           $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
           $stmt->execute();        
           return $stmt->fetchAll();          
     }
          
     public function getViewList($page = 1, $perPage = null, $sidx = null, $sort = null, $date = null, $category = null) {


        if (!$page)
            $page = 1;

        if (!$sidx)
            $sidx = isset(self::$aliases[$sidx]) ? self::$aliases[$sidx] : self::$aliases["starttime"];

        if (!$sort)
            $sort = "asc";

        if (!$date)
            $date = date("Y-m-d");
        else
            $date = date("Y-m-d", strtotime($date));

        try {           
            $sqlCount = "select count(gc.Id) from `gravity_calendar` gc";

            $sqlView = "select gc.*, gca.name as categoryName, gca.id_parent, gca.id_main, gs.*, sgu.showname, sgu.email  from `gravity_calendar` gc";

            $sqlWhere = "  LEFT JOIN `gravity_user_calendars` guc  ON gc.Id=guc.id_calendar 
                              LEFT JOIN `gravity_streams`gs  ON guc.id_stream=gs.id_stream 
                              LEFT JOIN `gravity_categories` gca ON guc.id_category=gca.id_category 
                              LEFT JOIN `sf_guard_user`sgu  ON guc.id_user=sgu.id                                 
                                where (gc.StartTime >= '" . $date . " 00:00:00 ' and gc.StartTime <= '" . $date . " 23:59:99 '  )             
        ";        


            $sqlLimit = " ORDER BY " . $sidx . " " . $sort . " ";
            $sqlLimit .= " LIMIT " . $perPage . " OFFSET " . ($page - 1) * $perPage;

            $sqlCount = $sqlCount . $sqlWhere;
            $sqlView = $sqlView . $sqlWhere . $sqlLimit;

            $stmt = $this->getEntityManager()->getConnection()->prepare($sqlCount);
            $stmt->execute();        
            $count = $stmt->fetch(PDO::FETCH_ASSOC);              
            
            $stmt = $this->getEntityManager()->getConnection()->prepare($sqlView);
            $stmt->execute();        
            $result = $stmt->fetch(PDO::FETCH_OBJ);              

            $pager = new gsArrayPager(null, $perPage, $count);
            $pager->setResultArray($result);
            $pager->setPage($page);
            $pager->init();

            return $pager;
        } catch (Exception $e) {
            return false;
        }
    }
    
    public function getLast() {
        
        $query = $this->getEntityManager()
                ->createQuery('SELECT p FROM AppCounterBundle:Counter p                                        
                                           ORDER BY p.id DESC
                                                    ');        
        $query->setMaxResults(1);
        return $query->getOneOrNullResult();                
  }  
      
     public function getListCountByDate() {                        
        $sql = "SELECT count(u.id) as count_data, DATE_FORMAT( created_at, '%d-%m-%Y' ) as date_count 
                       FROM counter__visitors u  
                            group by DATE_FORMAT( created_at, '%d-%m-%Y' ) 
                                  order by DATE_FORMAT( created_at, '%Y-%m-%d' ) DESC limit 31";
       return $this->fatchAllBySQL($sql);      
    }   
    
    
    public function getListCountByYear() {                        
        $sql = "SELECT count(u.id) as count_data, DATE_FORMAT( created_at, '%Y' ) as year 
                       FROM counter__visitors u  
                            group by DATE_FORMAT( created_at, '%Y' ) 
                                  order by DATE_FORMAT( created_at, '%Y-%m-%d' ) DESC limit 10";
       return $this->fatchAllBySQL($sql);
    }
    
    public function getListCountByMonthYear() {
                      
        $sql = "SELECT count(u.id) as count_data, DATE_FORMAT( created_at,'%m' ) as month ,DATE_FORMAT( created_at, '%Y' ) as year 
                       FROM counter__visitors u  
                            group by DATE_FORMAT( created_at, '%m-%Y' ) 
                                  order by DATE_FORMAT( created_at, '%Y-%m-%d' ) DESC limit 12";
        return $this->fatchAllBySQL($sql);
    }
    
     public function getListCountByDomain() {
                       
        $sql = "SELECT count(u.id) as count_domain, u.domain 
                    FROM counter__visitors u  
                        group by u.domain o
                            order by u.domain ";
        
       return $this->fatchAllBySQL($sql);
    }
    
    public function getListCountByIP() {
                
        $sql = "SELECT count(u.id) as count_IP, u.IP 
                    FROM counter__visitors u  
                        group by u.IP 
                            order by u.IP ";
        
        return $this->fatchAllBySQL($sql);
    }
    
    
    public function getListCountByIPDate() {
        
        $sql  = "SELECT count( u.id ) AS count_data, DATE_FORMAT( created_at, '%d-%m-%Y' ) AS date_count, IP
                   FROM counter__visitors u
                        GROUP BY IP, DATE_FORMAT( created_at, '%d-%m-%Y' )
                        ORDER BY DATE_FORMAT( created_at, '%Y-%m-%d' )  DESC";
        
        return $this->fatchAllBySQL($sql);
    }
    
    public function getListCountByBrowserDate() {
        
        $sql  = "SELECT count( u.id ) AS count_data, DATE_FORMAT( created_at, '%d-%m-%Y' ) AS date_count, browser
                   FROM counter__visitors u
                        GROUP BY browser, DATE_FORMAT( created_at, '%d-%m-%Y' )
                        ORDER BY DATE_FORMAT( created_at, '%Y-%m-%d' ) DESC limit 31" ;
        
        return $this->fatchAllBySQL($sql);
    }
    
     public function getListCountByDomainDate() {
        
        $sql  = "SELECT count( u.id ) AS count_data, DATE_FORMAT( created_at, '%d-%m-%Y' ) AS date_count, domain
                   FROM counter__visitors u
                       GROUP BY domain, DATE_FORMAT( created_at, '%d-%m-%Y' )
                       ORDER BY DATE_FORMAT( created_at, '%Y-%m-%d' ) DESC limit 31";
        
        return $this->fatchAllBySQL($sql);
    }
    
     
}
