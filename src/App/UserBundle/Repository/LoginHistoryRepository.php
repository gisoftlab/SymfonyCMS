<?php
/*
 * This file is part of the Gisoft package.
 *
 * (c) Damian Ostraszewski
 *
 */
namespace App\UserBundle\Repository;

use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Symfony\Component\DependencyInjection\ContainerInterface;
use App\UserBundle\Entity\LoginHistory as LoginHistory;
use App\CoreBundle\Libraries\gsEntityRepository;

/**
 * LoginHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LoginHistoryRepository extends gsEntityRepository {

       
    
    public function add($user, $status = self::STATUS_UNKNOWN, $userLogin = NULL) {
        
       
        $model = new LoginHistory();
        if($user){
            $model->setUser($user);
            $model->setUserEmail($user->getEmail());
            $model->setUserLogin($user->getUsername());        
        }else{
            $model->setUserEmail("unknown");
            if($userLogin)            
                $model->setUserLogin($userLogin);        
                else
                $model->setUserLogin("unknown");        
        }
        $model->setSessionId($_SERVER['HTTP_COOKIE']);
        $model->setIP($_SERVER['REMOTE_ADDR']);
        $model->setHeader(serialize($_SERVER));
        $model->setStatus($status);
        
        $this->_em->persist($model);
        $this->_em->flush();                        
    }
    
    public function saveUnknown($sigin) {            
        if(isset($sigin["username"]))
        {
            $model = new LoginHistory();            
            $model->setUserEmail($sigin["username"]);
            $model->setSessionId($_SERVER['HTTP_COOKIE']);
            $model->setIp($_SERVER['REMOTE_ADDR']);
            $model->setHeader(serialize($_SERVER));
            $model->setStatus(self::STATUS_UNKNOWN);
            $model->setUserLogin($sigin["username"]);        
            
            $this->_em->persist($model);
            $this->_em->flush();        
        }
    }
}
